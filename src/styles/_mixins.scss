@use "sass:color";

// Borrowed from Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/_functions.scss
@function contrast-ratio($background, $foreground: $color-contrast-light) {
	$l1: luminance($background);
	$l2: luminance(opaque($background, $foreground));

	@return if($l1 > $l2, divide($l1 + .05, $l2 + .05), divide($l2 + .05, $l1 + .05));
}

// Borrowed from Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/_functions.scss
// Tint a color: mix a color with white
@function tint-color($color, $weight) {
	@return mix(white, $color, $weight);
}

// Borrowed from Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/_functions.scss
// Shade a color: mix a color with black
@function shade-color($color, $weight) {
	@return mix(black, $color, $weight);
}

@function shift-color($color, $weight) {
	@return if($weight > 0, shade-color($color, $weight), tint-color($color, -$weight));
}

// Borrowed from Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/mixins/_text-truncate.scss
@mixin text-truncate() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// Based loosely on Bootstrap's button-outline-variant: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/mixins/_buttons.scss
// Except this version only includes a border for the :focus-visible state
@mixin button-variant-inverted($color, $color-hover: shade-color($color, $btn-hover-bg-shade-amount)) {
	color: $color;

	&:active,
	&:hover {
		color: $color-hover;
	}

	&:focus-visible {
		outline: none;
		border-color: $color;
	}
}

// Based heavily on Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/mixins/_buttons.scss
@mixin button-variant($background-color, $color: $white, $border-color: shade-color($background-color, $btn-border-shade-amount)) {
	color: $color;
	background-color: $background-color;
	border-color: $border-color;

	&:disabled {
		background-color: tint-color($background-color, 40%);
		border-color: tint-color($border-color, 40%);
	}

	&:active:not([disabled]) {
		background-color: shade-color($background-color, $btn-active-bg-shade-amount);
		border-color: shade-color($border-color, $btn-active-border-shade-amount);
	}

	&:focus-visible,
	&:hover:not([disabled]) {
		outline: none;
		background-color: shade-color($background-color, $btn-hover-bg-shade-amount);
		border-color: shade-color($border-color, $btn-hover-border-shade-amount);
	}
}

// Based heavily on Bootstrap: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/_buttons.scss
@mixin button-lg() {
	font-size: $font-size-lg;
	padding: 0.5rem 1rem;
}

@mixin button-sm() {
	font-size: $font-size-sm;
	padding: 0.25rem 0.5rem;
}

@mixin solid-border($border-color, $properties...) {
	@for $i from 0 to length($properties) {
		#{nth($properties, $i + 1)}: 1px solid $border-color;
	}
}

@mixin invert-colors() {
	background-color: $foreground-color;
	color: $background-color;
}

@mixin make-flex($flex-direction: row, $flex-wrap: nowrap, $justify-content: flex-start, $align-items: stretch, $align-content: normal, $row-gap: 0, $column-gap: 0) {
	display: flex;

	@if ($flex-direction !=row) {
		flex-direction: $flex-direction;
	}

	@if ($justify-content !=flex-start) {
		justify-content: $justify-content;
	}

	@if ($align-items !=stretch) {
		align-items: $align-items;
	}

	@if ($row-gap !=0) {
		row-gap: $row-gap;
	}

	@if ($column-gap !=0) {
		column-gap: $column-gap;
	}

	@if ($flex-wrap !=nowrap) {
		flex-wrap: $flex-wrap;
		align-content: $align-content;
	}
}

@mixin make-panel($background-color: $white, $color: $dark, $border-color: $color, $margin-bottom: 1rem) {
	background-color: $background-color;
	color: $color;
	@include solid-border($border-color, border);
	margin-bottom: $margin-bottom;
	box-shadow: 0.25rem 0.25rem 0.25rem 0rem $gray-700;
}

@mixin make-panel-grid($grid-template-columns: 1fr) {
	width: 100%;
	display: grid;
	grid-auto-flow: column;
	grid-auto-columns: 1fr;
	grid-template-columns: $grid-template-columns;

	// Prevent the last row from rendering a bottom border that doubles up with the panel border
	&:not(:last-child) {
		@include solid-border($dark, border-bottom);
	}

	>* {
		padding: 0.5rem;
	}
}

@mixin make-rating($color: $gray-400, $hover-color: $black) {
	display: flex;
	justify-content: space-evenly;
	flex-flow: row-reverse nowrap;
	color: $color;

	input {
		display: none;
	}

	label:hover,
	label:hover~label,
	input:checked+label,
	input:checked+label~label {
		color: $hover-color;
		cursor: pointer;
	}
}