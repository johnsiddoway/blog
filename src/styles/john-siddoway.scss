@import "normalize.css";
@import "./variables";
@import "./mixins";
@import "./input_range";

body {
	background-color: $background-color;
	color: $foreground-color;
	font-family: $font-family-sans-serif;
	font-size: $font-size-base;
	font-weight: $font-weight-base;
	line-height: $line-height-base;
	text-align: start;
}

div {
	box-sizing: border-box;
}

#root {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
}

header {
	@include invert-colors();
	margin-bottom: 1.5rem;
	padding: 0.5rem 0;

	a {
		color: $background-color;
		text-decoration: none;

		&:active,
		&:hover {
			color: $white;
		}
	}

	button {
		@include invert-colors();
		// reset styles so it just looks like text
		padding: 0;
		outline: none;
		box-shadow: none;
		border: none;
		// add styles so it looks like a link
		text-decoration: underline;
		cursor: pointer;
	}

	nav {
		@extend .container;
		@include make-flex($align-items: baseline, $justify-content: space-between);
	}

	.js-brand {
		color: $white;
		text-decoration: none;
		font-size: $font-size-lg;
	}
}

main {
	@extend .container;
	@include make-flex($flex-wrap: wrap);

	> * {
		flex: 1 1;
	}
}

footer {
	@include invert-colors();
	margin-top: auto;
	padding: 0.5rem 0;
	text-align: center;
}

form {
	margin-bottom: 0.5rem;
}

hr {
	margin: 0;
}

input {
	outline: none;
	@include solid-border(transparent, border);

	&[type=text] {
		border-color: $input-text-border-color;

		&:focus-visible {
			box-shadow: $input-text-focus-box-shadow;
		}
	}
}

button {
	display: inline-block;
	padding: 0.375rem 0.75rem;
	background-color: transparent;
	@include solid-border(transparent, border);
	border-radius: 0;
	cursor: pointer;

	&:disabled {
		cursor: default;
	}
}

// Re-using Bootstrap themed button class names (btn-primary, btn-danger, etc)
@each $name, $theme-color in $theme-colors {
	.btn-#{$name} {
		@include button-variant($color: $white, $background-color: $theme-color);
	}
}

// Heavily based on Bootstrap containers: https://github.com/twbs/bootstrap/blob/v5.2.3/scss/_containers.scss
// Stripped down to just a single container class
.container {
	padding-right: 0.75rem;
	padding-left: 0.75rem;
	margin-right: auto;
	margin-left: auto;
}

@each $breakpoint, $container-max-width in $container-max-widths {
	$grid-breakpoint: map-get($grid-breakpoints, $breakpoint);

	.container {
		@media (min-width: $grid-breakpoint) {
			width: $container-max-width;
		}
	}
}

.flex-with-gap {
	@include make-flex($column-gap: 0.5rem, $align-items: inherit);
}